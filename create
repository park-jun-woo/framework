<?php
require "util/File.php";
use util\File;

switch(count($argv)){
    default:echo "사용법: php create sample\n";exit;
    case 2:
        $project = $argv[1];
        $path_root = realpath(getcwd().DIRECTORY_SEPARATOR."..");
        $path = $path_root.DIRECTORY_SEPARATOR.$project;
        break;
    case 3:
        $project = $argv[1];
        $path = realpath($argv[2]);
        break;
}

echo "CREATE PROJECT '$project' on $path\n";

if(!is_dir($path)){mkdir($path);}
if(!is_dir($path.DIRECTORY_SEPARATOR."admin")){mkdir($path.DIRECTORY_SEPARATOR."admin");}
if(!is_dir($path.DIRECTORY_SEPARATOR."public")){mkdir($path.DIRECTORY_SEPARATOR."public");}
if(!is_dir($path.DIRECTORY_SEPARATOR."data")){mkdir($path.DIRECTORY_SEPARATOR."data");}
if(!is_dir($path.DIRECTORY_SEPARATOR."data".DIRECTORY_SEPARATOR."blacklist"))
{mkdir($path.DIRECTORY_SEPARATOR."data".DIRECTORY_SEPARATOR."blacklist");}
if(!is_dir($path.DIRECTORY_SEPARATOR."data".DIRECTORY_SEPARATOR."cache"))
{mkdir($path.DIRECTORY_SEPARATOR."data".DIRECTORY_SEPARATOR."cache");}
if(!is_dir($path.DIRECTORY_SEPARATOR."data".DIRECTORY_SEPARATOR."session"))
{mkdir($path.DIRECTORY_SEPARATOR."data".DIRECTORY_SEPARATOR."session");}
if(!is_dir($path.DIRECTORY_SEPARATOR."data".DIRECTORY_SEPARATOR."upload"))
{mkdir($path.DIRECTORY_SEPARATOR."data".DIRECTORY_SEPARATOR."upload");}
if(!is_dir($path.DIRECTORY_SEPARATOR."source")){mkdir($path.DIRECTORY_SEPARATOR."source");}
if(!is_dir($path.DIRECTORY_SEPARATOR."source".DIRECTORY_SEPARATOR."admin"))
{mkdir($path.DIRECTORY_SEPARATOR."source".DIRECTORY_SEPARATOR."admin");}
if(!is_dir($path.DIRECTORY_SEPARATOR."source".DIRECTORY_SEPARATOR."public"))
{mkdir($path.DIRECTORY_SEPARATOR."source".DIRECTORY_SEPARATOR."public");}

$createPath = $path.DIRECTORY_SEPARATOR.".env";
if(!file_exists($createPath)){
    $content = File::read("templates/env");
    $content = str_replace([
        "{{project}}","{{path.framework}}","{{path.root}}","{{path.source}}","{{path.data}}"
    ],[
        $project,getcwd(),$path,$path.DIRECTORY_SEPARATOR."source",$path.DIRECTORY_SEPARATOR."data"
    ],$content);
    File::write($createPath,$content);
}

$createPath = $path.DIRECTORY_SEPARATOR.".gitignore";
if(!file_exists($createPath)){
    $content = File::read("templates/gitignore");
    File::write($createPath,$content);
}

$createPath = $path.DIRECTORY_SEPARATOR."make";
if(!file_exists($createPath)){
    $content = File::read("templates/make");
    File::write($createPath,$content);
}

$createPath = $path.DIRECTORY_SEPARATOR."source".DIRECTORY_SEPARATOR."app.bson";
if(!file_exists($createPath)){
    $content = File::read("templates/app.bson");
    File::write($createPath,$content);
}

$createPath = $path.DIRECTORY_SEPARATOR."admin".DIRECTORY_SEPARATOR."index.php";
if(!file_exists($createPath)){
    $content = File::read("templates/index.php");
    File::write($createPath,$content);
}

$createPath = $path.DIRECTORY_SEPARATOR."public".DIRECTORY_SEPARATOR."index.php";
if(!file_exists($createPath)){
    $content = File::read("templates/index.php");
    File::write($createPath,$content);
}
?>